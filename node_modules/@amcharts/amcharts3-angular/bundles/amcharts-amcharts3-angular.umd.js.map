{"version":3,"file":"amcharts-amcharts3-angular.umd.js","sources":["../../../../projects/amcharts/amcharts3-angular/src/lib/amcharts3-angular.service.ts","../../../../projects/amcharts/amcharts3-angular/src/lib/amcharts3-angular.directive.ts","../../../../projects/amcharts/amcharts3-angular/src/lib/amcharts3-angular.module.ts","../../../../projects/amcharts/amcharts3-angular/src/public-api.ts","../../../../projects/amcharts/amcharts3-angular/src/amcharts-amcharts3-angular.ts"],"sourcesContent":["import { NgZone, Injectable } from '@angular/core';\n\n\n// TODO better type for this\ndeclare const AmCharts: any;\n\n\nexport interface AmChart {\n  [key: string]: any;\n}\n\nexport interface AmEvent {\n  [key: string]: any;\n}\n\nexport interface Formatter {\n  precision: number;\n  decimalSeparator: string;\n  thousandsSeparator: string;\n}\n\n\nexport declare class StockPanel {\n  constructor();\n  [key: string]: any;\n}\n\nexport declare class StockGraph {\n  constructor();\n  [key: string]: any;\n}\n\nexport declare class StockEvent {\n  constructor();\n  [key: string]: any;\n}\n\nexport declare class StockLegend {\n  constructor();\n  [key: string]: any;\n}\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AmChartsService {\n  constructor(private zone: NgZone) {}\n\n\n  get StockPanel(): typeof StockPanel {\n    return AmCharts.StockPanel;\n  }\n\n  get StockGraph(): typeof StockGraph {\n    return AmCharts.StockGraph;\n  }\n\n  get StockEvent(): typeof StockEvent {\n    return AmCharts.StockEvent;\n  }\n\n  get StockLegend(): typeof StockLegend {\n    return AmCharts.StockLegend;\n  }\n\n\n  get baseHref(): boolean {\n    return AmCharts.baseHref;\n  }\n\n  set baseHref(v: boolean) {\n    AmCharts.baseHref = v;\n  }\n\n\n  get useUTC(): boolean {\n    return AmCharts.useUTC;\n  }\n\n  set useUTC(v: boolean) {\n    AmCharts.useUTC = v;\n  }\n\n\n  get dayNames(): Array<string> {\n    return AmCharts.dayNames;\n  }\n\n  set dayNames(v: Array<string>) {\n    AmCharts.dayNames = v;\n  }\n\n\n  get monthNames(): Array<string> {\n    return AmCharts.monthNames;\n  }\n\n  set monthNames(v: Array<string>) {\n    AmCharts.monthNames = v;\n  }\n\n\n  get shortDayNames(): Array<string> {\n    return AmCharts.shortDayNames;\n  }\n\n  set shortDayNames(v: Array<string>) {\n    AmCharts.shortDayNames = v;\n  }\n\n\n  get shortMonthNames(): Array<string> {\n    return AmCharts.shortMonthNames;\n  }\n\n  set shortMonthNames(v: Array<string>) {\n    AmCharts.shortMonthNames = v;\n  }\n\n\n  // TODO better type for this\n  get theme(): any {\n    return AmCharts.theme;\n  }\n\n  // TODO better type for this\n  set theme(v: any) {\n    AmCharts.theme = v;\n  }\n\n\n  get processDelay(): number {\n    return AmCharts.processDelay;\n  }\n\n  set processDelay(v: number) {\n    AmCharts.processDelay = v;\n  }\n\n\n  get charts(): Array<AmChart> {\n    return AmCharts.charts;\n  }\n\n\n  addInitHandler(handler: (chart: AmChart) => void, types?: Array<string>): void {\n    // TODO use this.zone.runOutsideAngular ?\n    AmCharts.addInitHandler(handler, types);\n  }\n\n  addPrefix(\n    value: number,\n    prefixesBig: Array<{ number: number, prefix: string }>,\n    prefixesSmall: Array<{ number: number, prefix: string }>,\n    numberFormatter: Formatter\n  ): string {\n    // TODO use this.zone.runOutsideAngular ?\n    return AmCharts.addPrefix(value, prefixesBig, prefixesSmall, numberFormatter);\n  }\n\n  clear(): void {\n    // TODO use this.zone.runOutsideAngular ?\n    AmCharts.clear();\n  }\n\n  formatDate(date: Date, format: string): string {\n    // TODO use this.zone.runOutsideAngular ?\n    return AmCharts.formatDate(date, format);\n  }\n\n  formatNumber(value: number, formatter: Formatter, zeroCount: number): string {\n    // TODO use this.zone.runOutsideAngular ?\n    return AmCharts.formatNumber(value, formatter, zeroCount);\n  }\n\n  stringToDate(value: string, format: string): Date {\n    // TODO use this.zone.runOutsideAngular ?\n    return AmCharts.stringToDate(value, format);\n  }\n\n\n  // TODO is Node the correct type ?\n  // TODO better type for config\n  makeChart(id: string | Node, config: any, delay?: number): AmChart {\n    return this.zone.runOutsideAngular(() => AmCharts.makeChart(id, config, delay));\n  }\n\n\n  addListener(chart: AmChart, type: string, fn: (event: AmEvent) => void): () => void {\n    const callback = (e: AmEvent) => {\n      this.zone.run(() => {\n        fn(e);\n      });\n    };\n\n    this.zone.runOutsideAngular(() => {\n      chart.addListener(type, callback);\n    });\n\n    return () => {\n      this.zone.runOutsideAngular(() => {\n        chart.removeListener(chart, type, callback);\n      });\n    };\n  }\n\n\n  updateChart(chart: AmChart, fn: () => void): void {\n    this.zone.runOutsideAngular(() => {\n      fn();\n      chart.validateNow(true);\n    });\n  }\n\n\n  destroyChart(chart: AmChart): void {\n    this.zone.runOutsideAngular(() => {\n      chart.clear();\n    });\n  }\n}\n","import type { SimpleChanges, AfterViewInit, OnChanges, OnDestroy } from '@angular/core';\nimport type { AmChart } from './amcharts3-angular.service';\nimport { Directive, ElementRef, Input, NgZone } from '@angular/core';\nimport { AmChartsService } from './amcharts3-angular.service';\n\n\nfunction getType(x: any) {\n  // TODO make this faster ?\n  return {}.toString.call(x);\n}\n\nfunction hasOwnKey(obj: any, key: any) {\n  return {}.hasOwnProperty.call(obj, key);\n}\n\n\nfunction copyObject(x: any) {\n  const output: any = {};\n\n  // TODO use Object.keys ?\n  for (const key in x) {\n    if (hasOwnKey(x, key)) {\n      output[key] = copy(x[key]);\n    }\n  }\n\n  return output;\n}\n\nfunction copyArray(x: any) {\n  const length = x.length;\n\n  const output = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    output[i] = copy(x[i]);\n  }\n\n  return output;\n}\n\n// TODO can this be made faster ?\n// TODO what about regexps, etc. ?\nfunction copy(x: any) {\n  switch (getType(x)) {\n  case '[object Array]':\n    return copyArray(x);\n\n  case '[object Object]':\n    return copyObject(x);\n\n  // TODO is this necessary ?\n  case '[object Date]':\n    return new Date(x.getTime());\n\n  default:\n    return x;\n  }\n}\n\n\nfunction isNaN(x: any) {\n  return x !== x;\n}\n\nfunction isNumberEqual(x: any, y: any) {\n  return x === y || (isNaN(x) && isNaN(y));\n}\n\n\nfunction removeChartListeners(chart: any, x: any, y: any) {\n  if (x !== y) {\n    // TODO is this necessary ?\n    if (x == null) {\n      x = [];\n    }\n\n    // TODO is this necessary ?\n    if (y == null) {\n      y = [];\n    }\n\n    const xLength = x.length;\n    const yLength = y.length;\n\n    for (let i = 0; i < xLength; ++i) {\n      const xValue = x[i];\n\n      let has = false;\n\n      // TODO make this faster ?\n      for (let j = 0; j < yLength; ++j) {\n        const yValue = y[j];\n\n        // TODO is this correct ?\n        if (xValue.event  === yValue.event &&\n            xValue.method === yValue.method) {\n          has = true;\n          break;\n        }\n      }\n\n      if (!has) {\n        // TODO is this correct ?\n        chart.removeListener(chart, xValue.event, xValue.method);\n      }\n    }\n  }\n}\n\n\nfunction updateArray(a: any, x: any, y: any) {\n  let didUpdate = false;\n\n  if (x !== y) {\n    const xLength = x.length;\n    const yLength = y.length;\n\n    if (xLength !== yLength) {\n      a.length = yLength;\n      didUpdate = true;\n    }\n\n    for (let i = 0; i < yLength; ++i) {\n      if (i < xLength) {\n        if (update(a, i, x[i], y[i])) {\n          didUpdate = true;\n        }\n\n      } else {\n        // TODO make this faster ?\n        a[i] = copy(y[i]);\n        // TODO is this necessary ?\n        didUpdate = true;\n      }\n    }\n  }\n\n  return didUpdate;\n}\n\n\nfunction update(obj: any, key: any, x: any, y: any) {\n  let didUpdate = false;\n\n  if (x !== y) {\n    const xType = getType(x);\n    const yType = getType(y);\n\n    if (xType === yType) {\n      switch (xType) {\n      case '[object Array]':\n        if (updateArray(obj[key], x, y)) {\n          didUpdate = true;\n        }\n        break;\n\n      case '[object Object]':\n        if (updateObject(obj[key], x, y)) {\n          didUpdate = true;\n        }\n        break;\n\n      case '[object Date]':\n        if (x.getTime() !== y.getTime()) {\n          // TODO make this faster ?\n          obj[key] = copy(y);\n          didUpdate = true;\n        }\n        break;\n\n      case '[object Number]':\n        if (!isNumberEqual(x, y)) {\n          // TODO is the copy necessary ?\n          obj[key] = copy(y);\n          didUpdate = true;\n        }\n        break;\n\n      default:\n        if (x !== y) {\n          // TODO is the copy necessary ?\n          obj[key] = copy(y);\n          didUpdate = true;\n        }\n        break;\n      }\n\n    // TODO is this correct ?\n    } else {\n      // TODO make this faster ?\n      obj[key] = copy(y);\n      didUpdate = true;\n    }\n  }\n\n  return didUpdate;\n}\n\nfunction updateObject(chart: any, oldObj: any, newObj: any) {\n  let didUpdate = false;\n\n  if (oldObj !== newObj) {\n    // TODO use Object.keys ?\n    for (const key in newObj) {\n      if (hasOwnKey(newObj, key)) {\n        // TODO make this faster ?\n        if (hasOwnKey(oldObj, key)) {\n          // TODO should this count as an update ?\n          if (key === 'listeners') {\n            // TODO make this faster ?\n            removeChartListeners(chart, oldObj[key], newObj[key]);\n          }\n\n          if (update(chart, key, oldObj[key], newObj[key])) {\n            didUpdate = true;\n          }\n\n        } else {\n          // TODO make this faster ?\n          chart[key] = copy(newObj[key]);\n          didUpdate = true;\n        }\n      }\n    }\n\n    // TODO use Object.keys ?\n    for (const key in oldObj) {\n      if (hasOwnKey(oldObj, key) && !hasOwnKey(newObj, key)) {\n        if (key === 'listeners') {\n          removeChartListeners(chart, oldObj[key], []);\n        }\n\n        delete chart[key];\n        didUpdate = true;\n      }\n    }\n  }\n\n  return didUpdate;\n}\n\n\n@Directive({\n  selector: 'amCharts'\n})\nexport class AmChartsDirective implements AfterViewInit, OnChanges, OnDestroy {\n  @Input() id!: string;\n  @Input() options: any; // TODO better type for this\n  @Input() delay = 0;\n\n  private chart: AmChart | undefined;\n\n  constructor(private el: ElementRef, private AmCharts: AmChartsService, private zone: NgZone) {}\n\n  ngAfterViewInit() {\n    // AmCharts mutates the config object, so we have to make a deep copy to prevent that\n    const props = copy(this.options);\n\n    const el = this.el.nativeElement;\n\n    el.id = this.id;\n    el.style.display = 'block';\n\n    this.chart = this.AmCharts.makeChart(this.id, props, this.delay);\n  }\n\n  // TODO is this correct ?\n  ngOnChanges(x: SimpleChanges) {\n    const el = this.el.nativeElement;\n\n    if (x.id) {\n      el.id = x.id.currentValue;\n    }\n\n    if (x.options) {\n      // Update the chart after init\n      if (this.chart) {\n        // This is needed to avoid triggering ngDoCheck\n        this.zone.runOutsideAngular(() => {\n          const didUpdate = updateObject(this.chart, x.options.previousValue, x.options.currentValue);\n\n          // TODO make this faster\n          if (didUpdate) {\n            this.chart!.validateNow(true);\n          }\n        });\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.chart) {\n      this.AmCharts.destroyChart(this.chart);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AmChartsDirective } from './amcharts3-angular.directive';\nimport { AmChartsService } from './amcharts3-angular.service';\n\n@NgModule({\n  declarations: [\n    AmChartsDirective\n  ],\n  exports: [\n    AmChartsDirective\n  ],\n  providers: [\n    AmChartsService\n  ]\n})\nexport class AmChartsModule {}\n","/*\n * Public API Surface of amcharts3-angular\n */\n\nexport * from './lib/amcharts3-angular.service';\nexport * from './lib/amcharts3-angular.directive';\nexport * from './lib/amcharts3-angular.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Injectable","Directive","Input","NgModule"],"mappings":"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"}