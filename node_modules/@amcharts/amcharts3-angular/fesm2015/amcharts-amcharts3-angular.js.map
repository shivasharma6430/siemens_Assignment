{"version":3,"file":"amcharts-amcharts3-angular.js","sources":["../../../../projects/amcharts/amcharts3-angular/src/lib/amcharts3-angular.service.ts","../../../../projects/amcharts/amcharts3-angular/src/lib/amcharts3-angular.directive.ts","../../../../projects/amcharts/amcharts3-angular/src/lib/amcharts3-angular.module.ts","../../../../projects/amcharts/amcharts3-angular/src/public-api.ts","../../../../projects/amcharts/amcharts3-angular/src/amcharts-amcharts3-angular.ts"],"sourcesContent":["import { NgZone, Injectable } from '@angular/core';\n\n\n// TODO better type for this\ndeclare const AmCharts: any;\n\n\nexport interface AmChart {\n  [key: string]: any;\n}\n\nexport interface AmEvent {\n  [key: string]: any;\n}\n\nexport interface Formatter {\n  precision: number;\n  decimalSeparator: string;\n  thousandsSeparator: string;\n}\n\n\nexport declare class StockPanel {\n  constructor();\n  [key: string]: any;\n}\n\nexport declare class StockGraph {\n  constructor();\n  [key: string]: any;\n}\n\nexport declare class StockEvent {\n  constructor();\n  [key: string]: any;\n}\n\nexport declare class StockLegend {\n  constructor();\n  [key: string]: any;\n}\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AmChartsService {\n  constructor(private zone: NgZone) {}\n\n\n  get StockPanel(): typeof StockPanel {\n    return AmCharts.StockPanel;\n  }\n\n  get StockGraph(): typeof StockGraph {\n    return AmCharts.StockGraph;\n  }\n\n  get StockEvent(): typeof StockEvent {\n    return AmCharts.StockEvent;\n  }\n\n  get StockLegend(): typeof StockLegend {\n    return AmCharts.StockLegend;\n  }\n\n\n  get baseHref(): boolean {\n    return AmCharts.baseHref;\n  }\n\n  set baseHref(v: boolean) {\n    AmCharts.baseHref = v;\n  }\n\n\n  get useUTC(): boolean {\n    return AmCharts.useUTC;\n  }\n\n  set useUTC(v: boolean) {\n    AmCharts.useUTC = v;\n  }\n\n\n  get dayNames(): Array<string> {\n    return AmCharts.dayNames;\n  }\n\n  set dayNames(v: Array<string>) {\n    AmCharts.dayNames = v;\n  }\n\n\n  get monthNames(): Array<string> {\n    return AmCharts.monthNames;\n  }\n\n  set monthNames(v: Array<string>) {\n    AmCharts.monthNames = v;\n  }\n\n\n  get shortDayNames(): Array<string> {\n    return AmCharts.shortDayNames;\n  }\n\n  set shortDayNames(v: Array<string>) {\n    AmCharts.shortDayNames = v;\n  }\n\n\n  get shortMonthNames(): Array<string> {\n    return AmCharts.shortMonthNames;\n  }\n\n  set shortMonthNames(v: Array<string>) {\n    AmCharts.shortMonthNames = v;\n  }\n\n\n  // TODO better type for this\n  get theme(): any {\n    return AmCharts.theme;\n  }\n\n  // TODO better type for this\n  set theme(v: any) {\n    AmCharts.theme = v;\n  }\n\n\n  get processDelay(): number {\n    return AmCharts.processDelay;\n  }\n\n  set processDelay(v: number) {\n    AmCharts.processDelay = v;\n  }\n\n\n  get charts(): Array<AmChart> {\n    return AmCharts.charts;\n  }\n\n\n  addInitHandler(handler: (chart: AmChart) => void, types?: Array<string>): void {\n    // TODO use this.zone.runOutsideAngular ?\n    AmCharts.addInitHandler(handler, types);\n  }\n\n  addPrefix(\n    value: number,\n    prefixesBig: Array<{ number: number, prefix: string }>,\n    prefixesSmall: Array<{ number: number, prefix: string }>,\n    numberFormatter: Formatter\n  ): string {\n    // TODO use this.zone.runOutsideAngular ?\n    return AmCharts.addPrefix(value, prefixesBig, prefixesSmall, numberFormatter);\n  }\n\n  clear(): void {\n    // TODO use this.zone.runOutsideAngular ?\n    AmCharts.clear();\n  }\n\n  formatDate(date: Date, format: string): string {\n    // TODO use this.zone.runOutsideAngular ?\n    return AmCharts.formatDate(date, format);\n  }\n\n  formatNumber(value: number, formatter: Formatter, zeroCount: number): string {\n    // TODO use this.zone.runOutsideAngular ?\n    return AmCharts.formatNumber(value, formatter, zeroCount);\n  }\n\n  stringToDate(value: string, format: string): Date {\n    // TODO use this.zone.runOutsideAngular ?\n    return AmCharts.stringToDate(value, format);\n  }\n\n\n  // TODO is Node the correct type ?\n  // TODO better type for config\n  makeChart(id: string | Node, config: any, delay?: number): AmChart {\n    return this.zone.runOutsideAngular(() => AmCharts.makeChart(id, config, delay));\n  }\n\n\n  addListener(chart: AmChart, type: string, fn: (event: AmEvent) => void): () => void {\n    const callback = (e: AmEvent) => {\n      this.zone.run(() => {\n        fn(e);\n      });\n    };\n\n    this.zone.runOutsideAngular(() => {\n      chart.addListener(type, callback);\n    });\n\n    return () => {\n      this.zone.runOutsideAngular(() => {\n        chart.removeListener(chart, type, callback);\n      });\n    };\n  }\n\n\n  updateChart(chart: AmChart, fn: () => void): void {\n    this.zone.runOutsideAngular(() => {\n      fn();\n      chart.validateNow(true);\n    });\n  }\n\n\n  destroyChart(chart: AmChart): void {\n    this.zone.runOutsideAngular(() => {\n      chart.clear();\n    });\n  }\n}\n","import type { SimpleChanges, AfterViewInit, OnChanges, OnDestroy } from '@angular/core';\nimport type { AmChart } from './amcharts3-angular.service';\nimport { Directive, ElementRef, Input, NgZone } from '@angular/core';\nimport { AmChartsService } from './amcharts3-angular.service';\n\n\nfunction getType(x: any) {\n  // TODO make this faster ?\n  return {}.toString.call(x);\n}\n\nfunction hasOwnKey(obj: any, key: any) {\n  return {}.hasOwnProperty.call(obj, key);\n}\n\n\nfunction copyObject(x: any) {\n  const output: any = {};\n\n  // TODO use Object.keys ?\n  for (const key in x) {\n    if (hasOwnKey(x, key)) {\n      output[key] = copy(x[key]);\n    }\n  }\n\n  return output;\n}\n\nfunction copyArray(x: any) {\n  const length = x.length;\n\n  const output = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    output[i] = copy(x[i]);\n  }\n\n  return output;\n}\n\n// TODO can this be made faster ?\n// TODO what about regexps, etc. ?\nfunction copy(x: any) {\n  switch (getType(x)) {\n  case '[object Array]':\n    return copyArray(x);\n\n  case '[object Object]':\n    return copyObject(x);\n\n  // TODO is this necessary ?\n  case '[object Date]':\n    return new Date(x.getTime());\n\n  default:\n    return x;\n  }\n}\n\n\nfunction isNaN(x: any) {\n  return x !== x;\n}\n\nfunction isNumberEqual(x: any, y: any) {\n  return x === y || (isNaN(x) && isNaN(y));\n}\n\n\nfunction removeChartListeners(chart: any, x: any, y: any) {\n  if (x !== y) {\n    // TODO is this necessary ?\n    if (x == null) {\n      x = [];\n    }\n\n    // TODO is this necessary ?\n    if (y == null) {\n      y = [];\n    }\n\n    const xLength = x.length;\n    const yLength = y.length;\n\n    for (let i = 0; i < xLength; ++i) {\n      const xValue = x[i];\n\n      let has = false;\n\n      // TODO make this faster ?\n      for (let j = 0; j < yLength; ++j) {\n        const yValue = y[j];\n\n        // TODO is this correct ?\n        if (xValue.event  === yValue.event &&\n            xValue.method === yValue.method) {\n          has = true;\n          break;\n        }\n      }\n\n      if (!has) {\n        // TODO is this correct ?\n        chart.removeListener(chart, xValue.event, xValue.method);\n      }\n    }\n  }\n}\n\n\nfunction updateArray(a: any, x: any, y: any) {\n  let didUpdate = false;\n\n  if (x !== y) {\n    const xLength = x.length;\n    const yLength = y.length;\n\n    if (xLength !== yLength) {\n      a.length = yLength;\n      didUpdate = true;\n    }\n\n    for (let i = 0; i < yLength; ++i) {\n      if (i < xLength) {\n        if (update(a, i, x[i], y[i])) {\n          didUpdate = true;\n        }\n\n      } else {\n        // TODO make this faster ?\n        a[i] = copy(y[i]);\n        // TODO is this necessary ?\n        didUpdate = true;\n      }\n    }\n  }\n\n  return didUpdate;\n}\n\n\nfunction update(obj: any, key: any, x: any, y: any) {\n  let didUpdate = false;\n\n  if (x !== y) {\n    const xType = getType(x);\n    const yType = getType(y);\n\n    if (xType === yType) {\n      switch (xType) {\n      case '[object Array]':\n        if (updateArray(obj[key], x, y)) {\n          didUpdate = true;\n        }\n        break;\n\n      case '[object Object]':\n        if (updateObject(obj[key], x, y)) {\n          didUpdate = true;\n        }\n        break;\n\n      case '[object Date]':\n        if (x.getTime() !== y.getTime()) {\n          // TODO make this faster ?\n          obj[key] = copy(y);\n          didUpdate = true;\n        }\n        break;\n\n      case '[object Number]':\n        if (!isNumberEqual(x, y)) {\n          // TODO is the copy necessary ?\n          obj[key] = copy(y);\n          didUpdate = true;\n        }\n        break;\n\n      default:\n        if (x !== y) {\n          // TODO is the copy necessary ?\n          obj[key] = copy(y);\n          didUpdate = true;\n        }\n        break;\n      }\n\n    // TODO is this correct ?\n    } else {\n      // TODO make this faster ?\n      obj[key] = copy(y);\n      didUpdate = true;\n    }\n  }\n\n  return didUpdate;\n}\n\nfunction updateObject(chart: any, oldObj: any, newObj: any) {\n  let didUpdate = false;\n\n  if (oldObj !== newObj) {\n    // TODO use Object.keys ?\n    for (const key in newObj) {\n      if (hasOwnKey(newObj, key)) {\n        // TODO make this faster ?\n        if (hasOwnKey(oldObj, key)) {\n          // TODO should this count as an update ?\n          if (key === 'listeners') {\n            // TODO make this faster ?\n            removeChartListeners(chart, oldObj[key], newObj[key]);\n          }\n\n          if (update(chart, key, oldObj[key], newObj[key])) {\n            didUpdate = true;\n          }\n\n        } else {\n          // TODO make this faster ?\n          chart[key] = copy(newObj[key]);\n          didUpdate = true;\n        }\n      }\n    }\n\n    // TODO use Object.keys ?\n    for (const key in oldObj) {\n      if (hasOwnKey(oldObj, key) && !hasOwnKey(newObj, key)) {\n        if (key === 'listeners') {\n          removeChartListeners(chart, oldObj[key], []);\n        }\n\n        delete chart[key];\n        didUpdate = true;\n      }\n    }\n  }\n\n  return didUpdate;\n}\n\n\n@Directive({\n  selector: 'amCharts'\n})\nexport class AmChartsDirective implements AfterViewInit, OnChanges, OnDestroy {\n  @Input() id!: string;\n  @Input() options: any; // TODO better type for this\n  @Input() delay = 0;\n\n  private chart: AmChart | undefined;\n\n  constructor(private el: ElementRef, private AmCharts: AmChartsService, private zone: NgZone) {}\n\n  ngAfterViewInit() {\n    // AmCharts mutates the config object, so we have to make a deep copy to prevent that\n    const props = copy(this.options);\n\n    const el = this.el.nativeElement;\n\n    el.id = this.id;\n    el.style.display = 'block';\n\n    this.chart = this.AmCharts.makeChart(this.id, props, this.delay);\n  }\n\n  // TODO is this correct ?\n  ngOnChanges(x: SimpleChanges) {\n    const el = this.el.nativeElement;\n\n    if (x.id) {\n      el.id = x.id.currentValue;\n    }\n\n    if (x.options) {\n      // Update the chart after init\n      if (this.chart) {\n        // This is needed to avoid triggering ngDoCheck\n        this.zone.runOutsideAngular(() => {\n          const didUpdate = updateObject(this.chart, x.options.previousValue, x.options.currentValue);\n\n          // TODO make this faster\n          if (didUpdate) {\n            this.chart!.validateNow(true);\n          }\n        });\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.chart) {\n      this.AmCharts.destroyChart(this.chart);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AmChartsDirective } from './amcharts3-angular.directive';\nimport { AmChartsService } from './amcharts3-angular.service';\n\n@NgModule({\n  declarations: [\n    AmChartsDirective\n  ],\n  exports: [\n    AmChartsDirective\n  ],\n  providers: [\n    AmChartsService\n  ]\n})\nexport class AmChartsModule {}\n","/*\n * Public API Surface of amcharts3-angular\n */\n\nexport * from './lib/amcharts3-angular.service';\nexport * from './lib/amcharts3-angular.directive';\nexport * from './lib/amcharts3-angular.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}